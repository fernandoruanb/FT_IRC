==293513== Memcheck, a memory error detector
==293513== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==293513== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==293513== Command: ./ircserver 6667 ab
==293513== 
==293513== Invalid read of size 8
==293513==    at 0x49BBF9C: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==293513==    by 0x49BC4AC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==293513==    by 0x42F14D: Server::broadcast(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (Server_broadcast.cpp:55)
==293513==    by 0x42A3E9: Server::part(s_commands&) (part.cpp:57)
==293513==    by 0x41977F: Server::handleCommands(std::map<int, Client*, std::less<int>, std::allocator<std::pair<int const, Client*> > >*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int, int) (handleCommands.cpp:91)
==293513==    by 0x40EA72: Server::PollInputClientMonitoring() (Server_poll.cpp:159)
==293513==    by 0x40A6FD: Server::startIRCService() (Server.cpp:317)
==293513==    by 0x40A25E: Server::init(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:264)
==293513==    by 0x409BE3: Server::Server(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:178)
==293513==    by 0x43DFE5: main (main.cpp:23)
==293513==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==293513== 
==293513== 
==293513== Process terminating with default action of signal 11 (SIGSEGV)
==293513==  Access not within mapped region at address 0x10
==293513==    at 0x49BBF9C: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==293513==    by 0x49BC4AC: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==293513==    by 0x42F14D: Server::broadcast(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int) (Server_broadcast.cpp:55)
==293513==    by 0x42A3E9: Server::part(s_commands&) (part.cpp:57)
==293513==    by 0x41977F: Server::handleCommands(std::map<int, Client*, std::less<int>, std::allocator<std::pair<int const, Client*> > >*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int, int) (handleCommands.cpp:91)
==293513==    by 0x40EA72: Server::PollInputClientMonitoring() (Server_poll.cpp:159)
==293513==    by 0x40A6FD: Server::startIRCService() (Server.cpp:317)
==293513==    by 0x40A25E: Server::init(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:264)
==293513==    by 0x409BE3: Server::Server(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (Server.cpp:178)
==293513==    by 0x43DFE5: main (main.cpp:23)
==293513==  If you believe this happened as a result of a stack
==293513==  overflow in your program's main thread (unlikely but
==293513==  possible), you can try to increase the size of the
==293513==  main thread stack using the --main-stacksize= flag.
==293513==  The main thread stack size used in this run was 8388608.
==293513== 
==293513== HEAP SUMMARY:
==293513==     in use at exit: 147,916 bytes in 50 blocks
==293513==   total heap usage: 612 allocs, 562 frees, 217,981 bytes allocated
==293513== 
==293513== LEAK SUMMARY:
==293513==    definitely lost: 0 bytes in 0 blocks
==293513==    indirectly lost: 0 bytes in 0 blocks
==293513==      possibly lost: 0 bytes in 0 blocks
==293513==    still reachable: 147,916 bytes in 50 blocks
==293513==         suppressed: 0 bytes in 0 blocks
==293513== Rerun with --leak-check=full to see details of leaked memory
==293513== 
==293513== For lists of detected and suppressed errors, rerun with: -s
==293513== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
